# rename it to logging.properties
# and place it on application root dir
handlers = java.util.logging.FileHandler, java.util.logging.ConsoleHandler

java.util.logging.FileHandler.level     = INFO
java.util.logging.FileHandler.filter    =
java.util.logging.FileHandler.formatter = java.util.logging.SimpleFormatter
java.util.logging.FileHandler.encoding  =
java.util.logging.FileHandler.limit     = 50000
java.util.logging.FileHandler.count     =
java.util.logging.FileHandler.append    = true
java.util.logging.FileHandler.pattern   = %h/.store/%u.%g.log



# Property 	Description
# handlers 	A white space or comma separated list of handler class names to be added to the root Logger
# config 	A white space or comma separated list of class names which will be instantiated when the LogManager is initialized. The constructors of these classes can execute arbitrary configuration code.
# "logger".handlers 	Sets the handler classes to use for a given Logger in the hierarchy. Replace the "logger" with a specific name of a Logger in your app (e.g. com.jenkov.web).
# "logger".useParentHandlers 	Tells a given Logger whether it should log to its parents or not (true or false).
# "logger".level 	Tells a given Logger what minimum log level it should log.
#   	
# java.util.logging.FileHandler.level 	Sets the default log level for all FileHandler's.
# java.util.logging.FileHandler.filter 	A class name of the Filter to use on all FileHandler's.
# java.util.logging.FileHandler.formatter 	A class name of the Formatter to use on all FileHandler's.
# java.util.logging.FileHandler.encoding 	The encoding to use by all FileHandler's (e.g. UTF-8, UTF-16 etc.).
# java.util.logging.FileHandler.limit 	The approximate amount of bytes to write to a log file, before rotating to a new file.
# java.util.logging.FileHandler.count 	The number of log files to use in the log file rotation.
# java.util.logging.FileHandler.append 	Sets whether or not the FileHandler's should append to an existing file or not (true or false), if an existing log file is found.
# java.util.logging.FileHandler.pattern 	The log file name pattern.
#   	
# java.util.logging.ConsoleHandler.level 	Sets the default log level of all ConsoleHandler's.
# java.util.logging.ConsoleHandler.filter 	Sets the Filter to use by all ConsoleHandler's
# java.util.logging.ConsoleHandler.formatter 	Sets the Formatter to use by all ConsoleHandler's.
# java.util.logging.ConsoleHandler.encoding 	Sets the encoding to use by all ConsoleHandler's.
#   	
# java.util.logging.StreamHandler.level 	Sets the default log level of all StreamHandler's.
# java.util.logging.StreamHandler.filter 	Sets the Filter to use by all StreamHandler's
# java.util.logging.StreamHandler.formatter 	Sets the Formatter to use by all StreamHandler's.
# java.util.logging.StreamHandler.encoding 	Sets the encoding to use by all StreamHandler's.
#   	
# java.util.logging.SocketHandler.level 	Sets the default log level of all SocketHandler's.
# java.util.logging.SocketHandler.filter 	Sets the Filter to use by all SocketHandler's.
# java.util.logging.SocketHandler.formatter 	Sets the Formatter to use by all SocketHandler's.
# java.util.logging.SocketHandler.encoding 	Sets the encoding to use by all SocketHandler's.
# java.util.logging.SocketHandler.host 	Sets the host name of the host to send the log messages to (e.g. jenkov.com).
# java.util.logging.SocketHandler.port 	Sets the port number of of the host to send the log message to (e.g. 9999).
#   	
# java.util.logging.MemoryHandler.level 	Sets the default log level of all MemoryHandler's.
# java.util.logging.MemoryHandler.filter 	Sets the Filter to use by all MemoryHandler's.
# java.util.logging.MemoryHandler.size 	The size of the internal LogRecord buffer.
# java.util.logging.MemoryHandler.push 	The push level of messages causing the buffer to be pushed to the target Handler. Defaults to SEVERE.
# java.util.logging.MemoryHandler.target 	The class name of the target Handler.
 
 
 
# File Name Pattern
# 
# The file name pattern is a string containing a file name plus one or more special codes, telling the FileHandler how to generate the file names. The special codes you can use are:
# Code 	Meaning
# / 	The file name separator of the system. Typically either \ or / .
# %t 	The temp directory of the system.
# %h 	The user home directory of the system.
# %g 	The generation number that distinguishes the rotated log files from each other.
# %u 	A unique number to avoid naming conflicts.
# %% 	A single percent sign, in case you want to use that in your file name.